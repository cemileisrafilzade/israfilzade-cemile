{"ast":null,"code":"import _slicedToArray from \"C:/Users/Cemile/Desktop/portfolio/israfilzade-cemile/israfilzade-cemile/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useState, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nimport { useMantineTheme } from '@mantine/styles';\n\nfunction Portal(_ref) {\n  var children = _ref.children,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,\n      _ref$position = _ref.position,\n      position = _ref$position === void 0 ? \"relative\" : _ref$position,\n      target = _ref.target,\n      className = _ref.className;\n  var theme = useMantineTheme();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      mounted = _useState2[0],\n      setMounted = _useState2[1];\n\n  var ref = useRef();\n  useIsomorphicEffect(function () {\n    setMounted(true);\n    ref.current = !target ? document.createElement(\"div\") : typeof target === \"string\" ? document.querySelector(target) : target;\n\n    if (!target) {\n      document.body.appendChild(ref.current);\n    }\n\n    return function () {\n      !target && document.body.removeChild(ref.current);\n    };\n  }, [target]);\n\n  if (!mounted) {\n    return null;\n  }\n\n  return createPortal( /* @__PURE__ */React.createElement(\"div\", {\n    className: className,\n    dir: theme.dir,\n    style: {\n      position: position,\n      zIndex: zIndex\n    }\n  }, children), ref.current);\n}\n\nPortal.displayName = \"@mantine/core/Portal\";\nexport { Portal };","map":{"version":3,"mappings":";;;;;;AAIO,SAASA,MAAT,OAMJ;AAAA,MALDC,QAKC,QALDA,QAKC;AAAA,yBAJDC,MAIC;AAAA,MAJDA,MAIC,4BAJQ,CAIR;AAAA,2BAHDC,QAGC;AAAA,MAHDA,QAGC,8BAHU,UAGV;AAAA,MAFDC,MAEC,QAFDA,MAEC;AAAA,MADDC,SACC,QADDA,SACC;AACD,MAAMC,KAAK,GAAGC,eAAe,EAA7B;;AACA,kBAA8BC,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,GAAG,GAAGC,MAAM,EAAlB;AACAC,qBAAmB,CAAC,YAAM;AACxBH,cAAU,CAAC,IAAD,CAAV;AACAC,OAAG,CAACG,OAAJ,GAAc,CAACV,MAAD,GAAUW,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV,GAA0C,OAAOZ,MAAP,KAAkB,QAAlB,GAA6BW,QAAQ,CAACE,aAAT,CAAuBb,MAAvB,CAA7B,GAA8DA,MAAtH;;AACA,QAAI,CAACA,MAAL,EAAa;AACXW,cAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BR,GAAG,CAACG,OAA9B;AACD;;AACD,WAAO,YAAM;AACX,OAACV,MAAD,IAAWW,QAAQ,CAACG,IAAT,CAAcE,WAAd,CAA0BT,GAAG,CAACG,OAA9B,CAAX;AACD,KAFD;AAGD,GATkB,EAShB,CAACV,MAAD,CATgB,CAAnB;;AAUA,MAAI,CAACK,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AACD,SAAOY,YAAY,iBAAiBC,KAAK,CAACN,aAAN,CAAoB,KAApB,EAA2B;AAC7DX,aAAS,EAATA,SAD6D;AAE7DkB,OAAG,EAAEjB,KAAK,CAACiB,GAFkD;AAG7DC,SAAK,EAAE;AAAErB,cAAQ,EAARA,QAAF;AAAYD,YAAM,EAANA;AAAZ;AAHsD,GAA3B,EAIjCD,QAJiC,CAAjB,EAILU,GAAG,CAACG,OAJC,CAAnB;AAKD;;AACDd,MAAM,CAACyB,WAAP,GAAqB,sBAArB","names":["Portal","children","zIndex","position","target","className","theme","useMantineTheme","useState","mounted","setMounted","ref","useRef","useIsomorphicEffect","current","document","createElement","querySelector","body","appendChild","removeChild","createPortal","React","dir","style","displayName"],"sources":["C:\\Users\\Cemile\\Desktop\\portfolio\\israfilzade-cemile\\israfilzade-cemile\\node_modules\\@mantine\\core\\src\\components\\Portal\\Portal.tsx"],"sourcesContent":["import React, { ReactPortal, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nimport { useMantineTheme } from '@mantine/styles';\n\nexport interface PortalProps {\n  /** Portal children, for example, modal or popover */\n  children: React.ReactNode;\n\n  /** Root element z-index property */\n  zIndex?: number;\n\n  /** Root element position property */\n  position?: string;\n\n  /** Element where portal should be rendered, by default new div element is created and appended to document.body */\n  target?: HTMLElement | string;\n\n  /** Root element className */\n  className?: string;\n}\n\nexport function Portal({\n  children,\n  zIndex = 1,\n  position = 'relative',\n  target,\n  className,\n}: PortalProps): ReactPortal {\n  const theme = useMantineTheme();\n  const [mounted, setMounted] = useState(false);\n  const ref = useRef<HTMLElement>();\n\n  useIsomorphicEffect(() => {\n    setMounted(true);\n    ref.current = !target\n      ? document.createElement('div')\n      : typeof target === 'string'\n      ? document.querySelector(target)\n      : target;\n\n    if (!target) {\n      document.body.appendChild(ref.current);\n    }\n\n    return () => {\n      !target && document.body.removeChild(ref.current);\n    };\n  }, [target]);\n\n  if (!mounted) {\n    return null;\n  }\n\n  return createPortal(\n    <div className={className} dir={theme.dir} style={{ position: position as any, zIndex }}>\n      {children}\n    </div>,\n    ref.current\n  );\n}\n\nPortal.displayName = '@mantine/core/Portal';\n"]},"metadata":{},"sourceType":"module"}