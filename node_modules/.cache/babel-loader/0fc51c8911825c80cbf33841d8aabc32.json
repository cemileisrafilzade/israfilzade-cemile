{"ast":null,"code":"import _slicedToArray from \"C:/Users/Cemile/Desktop/portfolio/israfilzade-cemile/israfilzade-cemile/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nfunction isHexColor(hex) {\n  var replaced = hex.replace(\"#\", \"\");\n  return typeof replaced === \"string\" && replaced.length === 6 && !Number.isNaN(Number(\"0x\".concat(replaced)));\n}\n\nfunction hexToRgba(color) {\n  var replaced = color.replace(\"#\", \"\");\n  var parsed = parseInt(replaced, 16);\n  var r = parsed >> 16 & 255;\n  var g = parsed >> 8 & 255;\n  var b = parsed & 255;\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: 1\n  };\n}\n\nfunction rgbStringToRgba(color) {\n  var _color$replace$split$ = color.replace(/[^0-9,.]/g, \"\").split(\",\").map(Number),\n      _color$replace$split$2 = _slicedToArray(_color$replace$split$, 4),\n      r = _color$replace$split$2[0],\n      g = _color$replace$split$2[1],\n      b = _color$replace$split$2[2],\n      a = _color$replace$split$2[3];\n\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a || 1\n  };\n}\n\nfunction toRgba(color) {\n  if (isHexColor(color)) {\n    return hexToRgba(color);\n  }\n\n  if (color.startsWith(\"rgb\")) {\n    return rgbStringToRgba(color);\n  }\n\n  return {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1\n  };\n}\n\nexport { toRgba };","map":{"version":3,"mappings":";;AAAA,SAASA,UAAT,CAAoBC,GAApB,EAAyB;AACvB,MAAMC,QAAQ,GAAGD,GAAG,CAACE,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,CAAjB;AACA,SAAO,OAAOD,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,CAACE,MAAT,KAAoB,CAApD,IAAyD,CAACC,MAAM,CAACC,KAAP,CAAaD,MAAM,aAAMH,QAAN,EAAnB,CAAjE;AACD;;AACD,SAASK,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAMN,QAAQ,GAAGM,KAAK,CAACL,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAjB;AACA,MAAMM,MAAM,GAAGC,QAAQ,CAACR,QAAD,EAAW,EAAX,CAAvB;AACA,MAAMS,CAAC,GAAGF,MAAM,IAAI,EAAV,GAAe,GAAzB;AACA,MAAMG,CAAC,GAAGH,MAAM,IAAI,CAAV,GAAc,GAAxB;AACA,MAAMI,CAAC,GAAGJ,MAAM,GAAG,GAAnB;AACA,SAAO;AACLE,KAAC,EAADA,CADK;AAELC,KAAC,EAADA,CAFK;AAGLC,KAAC,EAADA,CAHK;AAILC,KAAC,EAAE;AAJE,GAAP;AAMD;;AACD,SAASC,eAAT,CAAyBP,KAAzB,EAAgC;AAC9B,8BAAqBA,KAAK,CAACL,OAAN,CAAc,WAAd,EAA2B,EAA3B,EAA+Ba,KAA/B,CAAqC,GAArC,EAA0CC,GAA1C,CAA8CZ,MAA9C,CAArB;AAAA;AAAA,MAAOM,CAAP;AAAA,MAAUC,CAAV;AAAA,MAAaC,CAAb;AAAA,MAAgBC,CAAhB;;AACA,SAAO;AAAEH,KAAC,EAADA,CAAF;AAAKC,KAAC,EAADA,CAAL;AAAQC,KAAC,EAADA,CAAR;AAAWC,KAAC,EAAEA,CAAC,IAAI;AAAnB,GAAP;AACD;;AACM,SAASI,MAAT,CAAgBV,KAAhB,EAAuB;AAC5B,MAAIR,UAAU,CAACQ,KAAD,CAAd,EAAuB;AACrB,WAAOD,SAAS,CAACC,KAAD,CAAhB;AACD;;AACD,MAAIA,KAAK,CAACW,UAAN,CAAiB,KAAjB,CAAJ,EAA6B;AAC3B,WAAOJ,eAAe,CAACP,KAAD,CAAtB;AACD;;AACD,SAAO;AACLG,KAAC,EAAE,CADE;AAELC,KAAC,EAAE,CAFE;AAGLC,KAAC,EAAE,CAHE;AAILC,KAAC,EAAE;AAJE,GAAP;AAMF","names":["isHexColor","hex","replaced","replace","length","Number","isNaN","hexToRgba","color","parsed","parseInt","r","g","b","a","rgbStringToRgba","split","map","toRgba","startsWith"],"sources":["C:\\Users\\Cemile\\Desktop\\portfolio\\israfilzade-cemile\\israfilzade-cemile\\node_modules\\@mantine\\styles\\src\\theme\\utils\\to-rgba\\to-rgba.ts"],"sourcesContent":["/* eslint-disable no-bitwise */\n\ninterface RGBA {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nfunction isHexColor(hex: string): boolean {\n  const replaced = hex.replace('#', '');\n  return (\n    typeof replaced === 'string' && replaced.length === 6 && !Number.isNaN(Number(`0x${replaced}`))\n  );\n}\n\nfunction hexToRgba(color: string): RGBA {\n  const replaced = color.replace('#', '');\n\n  const parsed = parseInt(replaced, 16);\n  const r = (parsed >> 16) & 255;\n  const g = (parsed >> 8) & 255;\n  const b = parsed & 255;\n\n  return {\n    r,\n    g,\n    b,\n    a: 1,\n  };\n}\n\nfunction rgbStringToRgba(color: string): RGBA {\n  const [r, g, b, a] = color\n    .replace(/[^0-9,.]/g, '')\n    .split(',')\n    .map(Number);\n\n  return { r, g, b, a: a || 1 };\n}\n\nexport function toRgba(color: string): RGBA {\n  if (isHexColor(color)) {\n    return hexToRgba(color);\n  }\n\n  if (color.startsWith('rgb')) {\n    return rgbStringToRgba(color);\n  }\n\n  return {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}