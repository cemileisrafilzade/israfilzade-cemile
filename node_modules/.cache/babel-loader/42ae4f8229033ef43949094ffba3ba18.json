{"ast":null,"code":"import _slicedToArray from \"C:/Users/Cemile/Desktop/portfolio/israfilzade-cemile/israfilzade-cemile/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\n\nfunction useLocalStorageValue(_ref) {\n  var key = _ref.key,\n      _ref$defaultValue = _ref.defaultValue,\n      defaultValue = _ref$defaultValue === void 0 ? void 0 : _ref$defaultValue;\n\n  var _useState = useState(typeof window !== \"undefined\" && \"localStorage\" in window ? window.localStorage.getItem(key) : defaultValue != null ? defaultValue : \"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var setLocalStorageValue = useCallback(function (val) {\n    if (typeof val === \"function\") {\n      setValue(function (current) {\n        var result = val(current);\n        window.localStorage.setItem(key, result);\n        return result;\n      });\n    } else {\n      window.localStorage.setItem(key, val);\n      setValue(val);\n    }\n  }, [key]);\n  useWindowEvent(\"storage\", function (event) {\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(event.newValue);\n    }\n  });\n  useEffect(function () {\n    if (defaultValue && !value) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n  return [value || defaultValue, setLocalStorageValue];\n}\n\nexport { useLocalStorageValue };","map":{"version":3,"mappings":";;;;AAEO,SAASA,oBAAT,OAGJ;AAAA,MAFDC,GAEC,QAFDA,GAEC;AAAA,+BADDC,YACC;AAAA,MADDA,YACC,kCADc,KAAK,CACnB;;AACD,kBAA0BC,QAAQ,CAAC,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,kBAAkBA,MAAnD,GAA4DA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BL,GAA5B,CAA5D,GAA+FC,YAAY,IAAI,IAAhB,GAAuBA,YAAvB,GAAsC,EAAtI,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,oBAAoB,GAAGC,WAAW,CAAC,UAACC,GAAD,EAAS;AAChD,QAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC7BH,cAAQ,CAAC,UAACI,OAAD,EAAa;AACpB,YAAMC,MAAM,GAAGF,GAAG,CAACC,OAAD,CAAlB;AACAR,cAAM,CAACC,YAAP,CAAoBS,OAApB,CAA4Bb,GAA5B,EAAiCY,MAAjC;AACA,eAAOA,MAAP;AACD,OAJO,CAAR;AAKD,KAND,MAMO;AACLT,YAAM,CAACC,YAAP,CAAoBS,OAApB,CAA4Bb,GAA5B,EAAiCU,GAAjC;AACAH,cAAQ,CAACG,GAAD,CAAR;AACD;AACF,GAXuC,EAWrC,CAACV,GAAD,CAXqC,CAAxC;AAYAc,gBAAc,CAAC,SAAD,EAAY,UAACC,KAAD,EAAW;AACnC,QAAIA,KAAK,CAACC,WAAN,KAAsBb,MAAM,CAACC,YAA7B,IAA6CW,KAAK,CAACf,GAAN,KAAcA,GAA/D,EAAoE;AAClEO,cAAQ,CAACQ,KAAK,CAACE,QAAP,CAAR;AACD;AACF,GAJa,CAAd;AAKAC,WAAS,CAAC,YAAM;AACd,QAAIjB,YAAY,IAAI,CAACK,KAArB,EAA4B;AAC1BE,0BAAoB,CAACP,YAAD,CAApB;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,EAAeK,KAAf,EAAsBE,oBAAtB,CAJM,CAAT;AAKA,SAAO,CAACF,KAAK,IAAIL,YAAV,EAAwBO,oBAAxB,CAAP;AACF","names":["useLocalStorageValue","key","defaultValue","useState","window","localStorage","getItem","value","setValue","setLocalStorageValue","useCallback","val","current","result","setItem","useWindowEvent","event","storageArea","newValue","useEffect"],"sources":["C:\\Users\\Cemile\\Desktop\\portfolio\\israfilzade-cemile\\israfilzade-cemile\\node_modules\\@mantine\\hooks\\src\\use-local-storage-value\\use-local-storage-value.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\nexport function useLocalStorageValue<T extends string>({\n  key,\n  defaultValue = undefined,\n}: {\n  key: string;\n  defaultValue?: T;\n}) {\n  const [value, setValue] = useState<T>(\n    typeof window !== 'undefined' && 'localStorage' in window\n      ? (window.localStorage.getItem(key) as T)\n      : ((defaultValue ?? '') as T)\n  );\n\n  const setLocalStorageValue = useCallback(\n    (val: T | ((prevState: T) => T)) => {\n      if (typeof val === 'function') {\n        setValue((current) => {\n          const result = val(current);\n          window.localStorage.setItem(key, result);\n          return result;\n        });\n      } else {\n        window.localStorage.setItem(key, val);\n        setValue(val);\n      }\n    },\n    [key]\n  );\n\n  useWindowEvent('storage', (event) => {\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(event.newValue as T);\n    }\n  });\n\n  useEffect(() => {\n    if (defaultValue && !value) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n\n  return [value || defaultValue, setLocalStorageValue] as const;\n}\n"]},"metadata":{},"sourceType":"module"}