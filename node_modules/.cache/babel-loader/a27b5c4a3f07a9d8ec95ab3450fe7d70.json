{"ast":null,"code":"import { useRef, useCallback } from 'react';\n\nvar updateRef = function updateRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n    return;\n  }\n\n  ref.current = value;\n};\n\nvar useComposedRef = function useComposedRef(libRef, userRef) {\n  var prevUserRef = useRef();\n  return useCallback(function (instance) {\n    libRef.current = instance;\n\n    if (prevUserRef.current) {\n      updateRef(prevUserRef.current, null);\n    }\n\n    prevUserRef.current = userRef;\n\n    if (!userRef) {\n      return;\n    }\n\n    updateRef(userRef, instance);\n  }, [userRef]);\n};\n\nexport default useComposedRef;","map":{"version":3,"sources":["C:/Users/jamile.israfilzade/Desktop/israfilzade-cemile/node_modules/use-composed-ref/dist/use-composed-ref.esm.js"],"names":["useRef","useCallback","updateRef","ref","value","current","useComposedRef","libRef","userRef","prevUserRef","instance"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,OAApC;;AAEA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,KAAxB,EAA+B;AAC7C,MAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;AAC7BA,IAAAA,GAAG,CAACC,KAAD,CAAH;AACA;AACD;;AACDD,EAAAA,GAAG,CAACE,OAAJ,GAAcD,KAAd;AACD,CAND;;AAQA,IAAIE,cAAc,GAAG,SAASA,cAAT,CAAwBC,MAAxB,EAAgCC,OAAhC,EAAyC;AAC5D,MAAIC,WAAW,GAAGT,MAAM,EAAxB;AACA,SAAOC,WAAW,CAAC,UAAUS,QAAV,EAAoB;AACrCH,IAAAA,MAAM,CAACF,OAAP,GAAiBK,QAAjB;;AAEA,QAAID,WAAW,CAACJ,OAAhB,EAAyB;AACvBH,MAAAA,SAAS,CAACO,WAAW,CAACJ,OAAb,EAAsB,IAAtB,CAAT;AACD;;AAEDI,IAAAA,WAAW,CAACJ,OAAZ,GAAsBG,OAAtB;;AAEA,QAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAEDN,IAAAA,SAAS,CAACM,OAAD,EAAUE,QAAV,CAAT;AACD,GAdiB,EAcf,CAACF,OAAD,CAde,CAAlB;AAeD,CAjBD;;AAmBA,eAAeF,cAAf","sourcesContent":["import { useRef, useCallback } from 'react';\r\n\r\nvar updateRef = function updateRef(ref, value) {\r\n  if (typeof ref === 'function') {\r\n    ref(value);\r\n    return;\r\n  }\r\n  ref.current = value;\r\n};\r\n\r\nvar useComposedRef = function useComposedRef(libRef, userRef) {\r\n  var prevUserRef = useRef();\r\n  return useCallback(function (instance) {\r\n    libRef.current = instance;\r\n\r\n    if (prevUserRef.current) {\r\n      updateRef(prevUserRef.current, null);\r\n    }\r\n\r\n    prevUserRef.current = userRef;\r\n\r\n    if (!userRef) {\r\n      return;\r\n    }\r\n\r\n    updateRef(userRef, instance);\r\n  }, [userRef]);\r\n};\r\n\r\nexport default useComposedRef;\r\n"]},"metadata":{},"sourceType":"module"}